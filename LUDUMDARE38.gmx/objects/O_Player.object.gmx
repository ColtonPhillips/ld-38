<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>S_Player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>O_Entity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
Hand_x = x; 
Hand_y = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>get_input();
if (K_Space) 
{
    VPOSCAP = 10;
    VNEGCAP = -10;
    HPOSCAP = 10;
    HNEGCAP = -10;
} else 
{
    VPOSCAP = VPOSCAP_D;
    VNEGCAP = VNEGCAP_D;
    HPOSCAP = HPOSCAP_D;
    HNEGCAP = HNEGCAP_D;
}
GUN_Photon = (is_between(M_Distance,350,10000));
GUN_Boomerang = (is_between(M_Distance,175,200));
GUN_Buckshot = (is_between(M_Distance,100,175));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vspeed += K_Down - K_Up;
hspeed += K_Right - K_Left;
hspeed = clamp(hspeed,HNEGCAP,HPOSCAP);
vspeed = clamp(vspeed,VNEGCAP,VPOSCAP);
if (!K_H) {hspeed *= HFRICTION;}
if (!K_V) {vspeed *= VFRICTION;}
if (is_between(hspeed,-HMINSPEEDCLAMP,HMINSPEEDCLAMP)) {hspeed = 0;}
if (is_between(vspeed,-VMINSPEEDCLAMP,VMINSPEEDCLAMP)) {vspeed = 0;}
clamp_inside_room();
Hand_x = x+lengthdir_x(17,M_Dir);
Hand_y = y+lengthdir_y(17,M_Dir); 

if (GUN_Photon &amp;&amp; M_Left) {
    var inst = instance_create(Hand_x,Hand_y,O_Photon);
    inst.hspeed = lengthdir_x(18,M_Dir);
    inst.vspeed = lengthdir_y(18,M_Dir);
    inst.direction = M_Dir;   
}
if (GUN_Boomerang &amp;&amp; M_LeftP &amp;&amp; !instance_exists(O_Boomerang)) 
{
    var inst = instance_create(Hand_x,Hand_y,O_Boomerang);
    inst.hspeed = lengthdir_x(18,M_Dir);
    inst.vspeed = lengthdir_y(18,M_Dir);
    inst.direction = M_Dir;
} 
if (GUN_Buckshot &amp;&amp; M_LeftP &amp;&amp; instance_number(O_Buckshot) &lt; 10) 
{
    var inst = instance_create(Hand_x,Hand_y,O_Buckshot);
    inst.hspeed = lengthdir_x(18,M_Dir);
    inst.vspeed = lengthdir_y(18,M_Dir);
    inst.direction = M_Dir;
    inst = instance_create(Hand_x,Hand_y,O_Buckshot);
    inst.hspeed = lengthdir_x(18,M_Dir);
    inst.vspeed = lengthdir_y(18,M_Dir);
    inst.direction = M_Dir+random(10);
    inst = instance_create(Hand_x,Hand_y,O_Buckshot);
    inst.hspeed = lengthdir_x(18,M_Dir);
    inst.vspeed = lengthdir_y(18,M_Dir);
    inst.direction = M_Dir+random(15);
    inst = instance_create(Hand_x,Hand_y,O_Buckshot);
    inst.hspeed = lengthdir_x(18,M_Dir);
    inst.vspeed = lengthdir_y(18,M_Dir);
    inst.direction = M_Dir+random(5);
    inst = instance_create(Hand_x,Hand_y,O_Buckshot);
    inst.hspeed = lengthdir_x(18,M_Dir);
    inst.vspeed = lengthdir_y(18,M_Dir);
    inst.direction = M_Dir+random(-5);
    
    inst = instance_create(Hand_x,Hand_y,O_Buckshot);
    inst.hspeed = lengthdir_x(18,M_Dir);
    inst.vspeed = lengthdir_y(18,M_Dir);
    inst.direction = M_Dir+random(-10);
    
    inst = instance_create(Hand_x,Hand_y,O_Buckshot);
    inst.hspeed = lengthdir_x(18,M_Dir);
    inst.vspeed = lengthdir_y(18,M_Dir);
    inst.direction = M_Dir+random(-15);
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_arrow(x,y,mouse_x, mouse_y, 5);
draw_arrow(
    Hand_x,
    Hand_y,
    x,
    y,
    10
);
draw_circle(Hand_x,Hand_y,2,true);
draw_text(10,10,string(M_Distance));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
